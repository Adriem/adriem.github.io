@import "./_variables.scss";


// --=( RESPONSIVE )==----------------------------------------------------------

@mixin screen-between($min-width, $max-width) {
  @media screen
    and (min-width: $min-width)
    and (max-width: $max-width - 1) { @content }
}

@mixin screen-up-to($max-width) {
  @media screen and (max-width: $max-width - 1) { @content }
}

@mixin screen-at-least($min-width) {
  @media screen and (min-width: $min-width) { @content }
}


@mixin screen-xl() { @include screen-at-least($width-xl) { @content } }
@mixin screen-lg() { @include screen-between($width-lg, $width-xl) { @content } }
@mixin screen-md() { @include screen-between($width-md, $width-lg) { @content } }
@mixin screen-sm() { @include screen-between($width-sm, $width-md) { @content } }
@mixin screen-xs() { @include screen-up-to($width-xs) { @content } }


@mixin screen-desktop() { @include screen-at-least($width-sm) { @content } }
@mixin screen-mobile() { @include screen-up-to($width-sm) { @content } }


// --=( GRID )==----------------------------------------------------------------
@function calculate-grid-width($max-width, $slot-width, $max-items: -1) {
  $_max-width: if($max-items > 0,
                  min($max-width, $slot-width * $max-items),
                  $max-width);

  @return floor($_max-width / $slot-width) * $slot-width;
}

@mixin grid($element-width, $gutter-width, $max-items: -1) {
    $slot-width: $element-width + $gutter-width;

    @include screen-xs { width: 100%; margin: 0; }
    @include screen-sm { width: calculate-grid-width($width-sm, $slot-width, $max-items); }
    @include screen-md { width: calculate-grid-width($width-md, $slot-width, $max-items); }
    @include screen-lg { width: calculate-grid-width($width-lg, $slot-width, $max-items); }
    @include screen-xl { width: calculate-grid-width($width-xl, $slot-width, $max-items); }

    margin: 0 auto;

    &::after { content: ""; clear: both; display: block; }  // Clearfix
}

@mixin grid-element($element-width, $gutter-width, $scale: 1) {
    width: $element-width * $scale + $gutter-width * ($scale - 1);
    margin-left: floor($gutter-width / 2);
    margin-right: floor($gutter-width / 2);
    display: block;
    float: left;
    box-sizing: border-box;
}


// --=( PARAGRAPH )==-----------------------------------------------------------

@mixin paragraph($width, $margin-bottom) {
    max-width: $width;
    text-align: justify;
    margin-bottom: $margin-bottom;
    margin-left: auto;
    margin-right: auto;
}


// --=( ANIMATIONS )==----------------------------------------------------------

@mixin keyframes($name) { @keyframes #{$name} { @content } }

@mixin fade-in-anim($name, $direction: 'top', $offset: 0, $from: 0%, $to: 100%) {
  @include keyframes($name) {
    0% { opacity: 0; position: relative; #{ $direction }: $offset; }
    #{$from} { opacity: 0; position: relative; #{ $direction }: $offset; }
    #{$to} { opacity: 1; position: relative; #{ $direction }: 0; }
    100% { opacity: 1; position: relative; #{ $direction }: 0; }
  }
}

